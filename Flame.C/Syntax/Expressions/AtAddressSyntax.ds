using System;
using System.Collections.Generic;
using System.Text;
using Flame.Compiler;
using Flame.Compiler.Expressions;
using Flame.Compiler.Variables;
using Flame.C.Lexer;

namespace Flame.Syntax.C
{
    public class AtAddressSyntax : UnaryExpressionSyntax, IVariableSyntax
    {
        public const this(set IExpressionSyntax Operand)
        {
        	this.Operator = new Token(TokenType.Asterisk, "*");
        }
        public const this(set Token Operator, set IExpressionSyntax Operand);

        public const IVariable CreateVariable(ISyntaxState State)
        {
            return new AtAddressVariable(Operand.CreateVerifiedExpression(State));
        }

        protected override const IExpression CreateExpression(ISyntaxState State, Token Operator, IExpressionSyntax Operand)
        {
            return CreateVariable(State).CreateGetExpression();
        }
    }
}
