using System;
using System.Collections.Generic;
using System.Text;
using System.Linq;
using Flame.Compiler;
using Flame.C.Build;
using Flame.C.Lexer;

namespace Flame.Syntax.C
{
    public class FunctionDefinitionSyntax : IDeclarationSyntax, ISourceSyntax
    {
        public const this(set DeclarationSyntax Declaration, set IStatementSyntax Body);

        public DeclarationSyntax Declaration { const get; private set; }
        public IStatementSyntax Body { const get; private set; }

        public FunctionDeclaratorSyntax Declarator
        {
            const get return (FunctionDeclaratorSyntax)Declaration.Declarator;
        }

        public SourceLocation Location
        {
            const get
            {
                return Declaration.Location.Concat(Body.GetSourceLocation());
            }
        }

        public void Declare(ICSyntaxState State)
        {
            var elemType = Declaration.ElementType.CreateVerifiedType(State);
            var func = new SyntaxFunction(elemType, Declarator, Body, State);
            State.Declare(func);
            func.GetMethodBody();
        }

        public const CodeBuilder GetCode()
        {
            var cb = Declaration.GetCode();
            cb.Append(Body.GetCode());
            return cb;
        }
    }
}
