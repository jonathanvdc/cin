using System;
using System.Collections.Generic;
using System.Linq;
using Flame.Build;
using Flame.Syntax;
using Flame.Syntax.C;

namespace Flame.C.Build
{
    public class CompilationUnitBinder : IBinder
    {
        public const this(set CompilationUnit Unit);

        public CompilationUnit Unit { const get; private set; }
        public IEnvironment Environment { const get return Unit.Assembly.Environment; }

        private const IType GetType(string Name, [IType] Types)
        {
            foreach (var item in Types)
                if (item.Name.Equals(Name))
            {
                return item;
            }
            return null;
        }

        public const IType BindType(string Name)
        {
            var splitName = Name.Split(new char[] { ' ' });
            if (splitName.Length == 2)
            {
                if (splitName[0].Equals("struct"))
                {
                    return GetType(splitName[1], Unit.Structs);
                }
            }

            return Unit.Assembly.ExternalBinder.BindType(Name);
        }

        public const [IType] GetTypes()
        {
            return Unit.GetTypes();
        }
    }
}
